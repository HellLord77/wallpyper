import collections
import contextlib

_Language = collections.namedtuple('Language',
                                   ('family', 'name', 'native_name', 'ISO639', 'ISO639_2_T', 'ISO639_2_B', 'ISO639_3'))
_Country = collections.namedtuple('Country', (
    'name', 'official_name', 'sovereignty', 'ISO3166_alpha_2', 'ISO3166_alpha_3', 'ISO3166_numeric', 'ccTLD'))
_Locale = collections.namedtuple('Locale', ('language', 'country', 'BCP47'))


class _Vars(type):
    def __new__(mcs, *args, **kwargs):
        self = super().__new__(mcs, *args, **kwargs)
        self._vars = {val[3]: val for var, val in vars(self).items() if not var.startswith('_')}
        return self

    def __len__(self):
        return len(self._vars)

    def __contains__(self, name):
        return name in self._vars

    def __iter__(self):
        return iter(self._vars)


class _ISO639(_Vars):
    def __getitem__(self, name) -> _Language:
        return self._vars[name]


class Language(metaclass=_ISO639):
    AB = _Language('Northwest Caucasian', 'Abkhazian', ('аҧсуа бызшәа', 'аҧсшәа'), 'ab', 'abk', 'abk', 'abk')
    AA = _Language('Afro-Asiatic', 'Afar', ('Afaraf',), 'aa', 'aar', 'aar', 'aar')
    AF = _Language('Indo-European', 'Afrikaans', ('Afrikaans',), 'af', 'afr', 'afr', 'afr')
    AK = _Language('Niger–Congo', 'Akan', ('Akan',), 'ak', 'aka', 'aka', 'aka+2')
    SQ = _Language('Indo-European', 'Albanian', ('Shqip',), 'sq', 'sqi', 'alb', 'sqi+4')
    AM = _Language('Afro-Asiatic', 'Amharic', ('አማርኛ',), 'am', 'amh', 'amh', 'amh')
    AR = _Language('Afro-Asiatic', 'Arabic', ('العربية',), 'ar', 'ara', 'ara', 'ara+29')
    AN = _Language('Indo-European', 'Aragonese', ('aragonés',), 'an', 'arg', 'arg', 'arg')
    HY = _Language('Indo-European', 'Armenian', ('Հայերեն',), 'hy', 'hye', 'arm', 'hye')
    AS = _Language('Indo-European', 'Assamese', ('অসমীয়া',), 'as', 'asm', 'asm', 'asm')
    AV = _Language('Northeast Caucasian', 'Avaric', ('авар мацӀ', 'магӀарул мацӀ'), 'av', 'ava', 'ava', 'ava')
    AE = _Language('Indo-European', 'Avestan', ('avesta',), 'ae', 'ave', 'ave', 'ave')
    AY = _Language('Aymaran', 'Aymara', ('aymar aru',), 'ay', 'aym', 'aym', 'aym+2')
    AZ = _Language('Turkic', 'Azerbaijani', ('azərbaycan dili', 'تۆرکجه'), 'az', 'aze', 'aze', 'aze+2')
    BM = _Language('Niger–Congo', 'Bambara', ('bamanankan',), 'bm', 'bam', 'bam', 'bam')
    BA = _Language('Turkic', 'Bashkir', ('башҡорт теле',), 'ba', 'bak', 'bak', 'bak')
    EU = _Language('Language isolate', 'Basque', ('euskara', 'euskera'), 'eu', 'eus', 'baq', 'eus')
    BE = _Language('Indo-European', 'Belarusian', ('беларуская мова',), 'be', 'bel', 'bel', 'bel')
    BN = _Language('Indo-European', 'Bengali', ('বাংলা',), 'bn', 'ben', 'ben', 'ben')
    BI = _Language('Creole', 'Bislama', ('Bislama',), 'bi', 'bis', 'bis', 'bis')
    BS = _Language('Indo-European', 'Bosnian', ('bosanski jezik',), 'bs', 'bos', 'bos', 'bos')
    BR = _Language('Indo-European', 'Breton', ('brezhoneg',), 'br', 'bre', 'bre', 'bre')
    BG = _Language('Indo-European', 'Bulgarian', ('български език',), 'bg', 'bul', 'bul', 'bul')
    MY = _Language('Sino-Tibetan', 'Burmese', ('ဗမာစာ',), 'my', 'mya', 'bur', 'mya')
    CA = _Language('Indo-European', 'Catalan', ('català', 'valencià'), 'ca', 'cat', 'cat', 'cat')
    CH = _Language('Austronesian', 'Chamorro', ('Chamoru',), 'ch', 'cha', 'cha', 'cha')
    CE = _Language('Northeast Caucasian', 'Chechen', ('нохчийн мотт',), 'ce', 'che', 'che', 'che')
    NY = _Language('Niger–Congo', 'Chichewa', ('chiCheŵa', 'chinyanja'), 'ny', 'nya', 'nya', 'nya')
    ZH = _Language('Sino-Tibetan', 'Chinese', ('中文',), 'zh', 'zho', 'chi', 'zho+16')
    CV = _Language('Turkic', 'Chuvash', ('чӑваш чӗлхи',), 'cv', 'chv', 'chv', 'chv')
    KW = _Language('Indo-European', 'Cornish', ('Kernewek',), 'kw', 'cor', 'cor', 'cor')
    CO = _Language('Indo-European', 'Corsican', ('corsu', 'lingua corsa'), 'co', 'cos', 'cos', 'cos')
    CR = _Language('Algic', 'Cree', ('ᓀᐦᐃᔭᐍᐏᐣ',), 'cr', 'cre', 'cre', 'cre+6')
    HR = _Language('Indo-European', 'Croatian', ('hrvatski jezik',), 'hr', 'hrv', 'hrv', 'hrv')
    CS = _Language('Indo-European', 'Czech', ('čeština', 'český jazyk'), 'cs', 'ces', 'cze', 'ces')
    DA = _Language('Indo-European', 'Danish', ('dansk',), 'da', 'dan', 'dan', 'dan')
    DV = _Language('Indo-European', 'Divehi', ('ދިވެހި',), 'dv', 'div', 'div', 'div')
    NL = _Language('Indo-European', 'Dutch', ('Nederlands', 'Vlaams'), 'nl', 'nld', 'dut', 'nld')
    DZ = _Language('Sino-Tibetan', 'Dzongkha', ('རྫོང་ཁ',), 'dz', 'dzo', 'dzo', 'dzo')
    EN = _Language('Indo-European', 'English', ('English',), 'en', 'eng', 'eng', 'eng')
    EO = _Language('Constructed', 'Esperanto', ('Esperanto',), 'eo', 'epo', 'epo', 'epo')
    ET = _Language('Uralic', 'Estonian', ('eesti', 'eesti keel'), 'et', 'est', 'est', 'est+2')
    EE = _Language('Niger–Congo', 'Ewe', ('Eʋegbe',), 'ee', 'ewe', 'ewe', 'ewe')
    FO = _Language('Indo-European', 'Faroese', ('føroyskt',), 'fo', 'fao', 'fao', 'fao')
    FJ = _Language('Austronesian', 'Fijian', ('vosa Vakaviti',), 'fj', 'fij', 'fij', 'fij')
    FI = _Language('Uralic', 'Finnish', ('suomi', 'suomen kieli'), 'fi', 'fin', 'fin', 'fin')
    FR = _Language('Indo-European', 'French', ('français',), 'fr', 'fra', 'fre', 'fra')
    FF = _Language('Niger–Congo', 'Fulah', ('Fulfulde', 'Pulaar', 'Pular'), 'ff', 'ful', 'ful', 'ful+9')
    GL = _Language('Indo-European', 'Galician', ('Galego',), 'gl', 'glg', 'glg', 'glg')
    KA = _Language('Kartvelian', 'Georgian', ('ქართული',), 'ka', 'kat', 'geo', 'kat')
    DE = _Language('Indo-European', 'German', ('Deutsch',), 'de', 'deu', 'ger', 'deu')
    EL = _Language('Indo-European', 'Greek', ('Ελληνικά',), 'el', 'ell', 'gre', 'ell')
    GN = _Language('Tupian', 'Guarani', ("Avañe'ẽ",), 'gn', 'grn', 'grn', 'grn+5')
    GU = _Language('Indo-European', 'Gujarati', ('ગુજરાતી',), 'gu', 'guj', 'guj', 'guj')
    HT = _Language('Creole', 'Haitian', ('Kreyòl ayisyen',), 'ht', 'hat', 'hat', 'hat')
    HA = _Language('Afro-Asiatic', 'Hausa', ('(Hausa) هَوُسَ',), 'ha', 'hau', 'hau', 'hau')
    HE = _Language('Afro-Asiatic', 'Hebrew', ('עברית',), 'he', 'heb', 'heb', 'heb')
    HZ = _Language('Niger–Congo', 'Herero', ('Otjiherero',), 'hz', 'her', 'her', 'her')
    HI = _Language('Indo-European', 'Hindi', ('हिन्दी', 'हिंदी'), 'hi', 'hin', 'hin', 'hin')
    HO = _Language('Austronesian', 'Hiri Motu', ('Hiri Motu',), 'ho', 'hmo', 'hmo', 'hmo')
    HU = _Language('Uralic', 'Hungarian', ('magyar',), 'hu', 'hun', 'hun', 'hun')
    IA = _Language('Constructed', 'Interlingua', ('Interlingua',), 'ia', 'ina', 'ina', 'ina')
    ID = _Language('Austronesian', 'Indonesian', ('Bahasa Indonesia',), 'id', 'ind', 'ind', 'ind')
    IE = _Language('Constructed', 'Interlingue', ('(originally:) ',), 'ie', 'ile', 'ile', 'ile')
    GA = _Language('Indo-European', 'Irish', ('Gaeilge',), 'ga', 'gle', 'gle', 'gle')
    IG = _Language('Niger–Congo', 'Igbo', ('Asụsụ Igbo',), 'ig', 'ibo', 'ibo', 'ibo')
    IK = _Language('Eskimo–Aleut', 'Inupiaq', ('Iñupiaq', 'Iñupiatun'), 'ik', 'ipk', 'ipk', 'ipk+2')
    IO = _Language('Constructed', 'Ido', ('Ido',), 'io', 'ido', 'ido', 'ido')
    IS = _Language('Indo-European', 'Icelandic', ('Íslenska',), 'is', 'isl', 'ice', 'isl')
    IT = _Language('Indo-European', 'Italian', ('Italiano',), 'it', 'ita', 'ita', 'ita')
    IU = _Language('Eskimo–Aleut', 'Inuktitut', ('ᐃᓄᒃᑎᑐᑦ',), 'iu', 'iku', 'iku', 'iku+2')
    JA = _Language('Japonic', 'Japanese', ('日本語',), 'ja', 'jpn', 'jpn', 'jpn')
    JV = _Language('Austronesian', 'Javanese', ('ꦧꦱꦗꦮ', 'Basa Jawa'), 'jv', 'jav', 'jav', 'jav')
    KL = _Language('Eskimo–Aleut', 'Kalaallisut', ('kalaallisut', 'kalaallit oqaasii'), 'kl', 'kal', 'kal', 'kal')
    KN = _Language('Dravidian', 'Kannada', ('ಕನ್ನಡ',), 'kn', 'kan', 'kan', 'kan')
    KR = _Language('Nilo-Saharan', 'Kanuri', ('Kanuri',), 'kr', 'kau', 'kau', 'kau+3')
    KS = _Language('Indo-European', 'Kashmiri', ('کٲشُر',), 'ks', 'kas', 'kas', 'kas')
    KK = _Language('Turkic', 'Kazakh', ('қазақ тілі',), 'kk', 'kaz', 'kaz', 'kaz')
    KM = _Language('Austroasiatic', 'Central Khmer', ('ខ្មែរ', 'ខេមរភាសា', 'ភាសាខ្មែរ'), 'km', 'khm', 'khm', 'khm')
    KI = _Language('Niger–Congo', 'Kikuyu', ('Gĩkũyũ',), 'ki', 'kik', 'kik', 'kik')
    RW = _Language('Niger–Congo', 'Kinyarwanda', ('Ikinyarwanda',), 'rw', 'kin', 'kin', 'kin')
    KY = _Language('Turkic', 'Kirghiz', ('Кыргызча', 'Кыргыз тили'), 'ky', 'kir', 'kir', 'kir')
    KV = _Language('Uralic', 'Komi', ('коми кыв',), 'kv', 'kom', 'kom', 'kom+2')
    KG = _Language('Niger–Congo', 'Kongo', ('Kikongo',), 'kg', 'kon', 'kon', 'kon+3')
    KO = _Language('Koreanic', 'Korean', ('한국어',), 'ko', 'kor', 'kor', 'kor')
    KU = _Language('Indo-European', 'Kurdish', ('Kurdî',), 'ku', 'kur', 'kur', 'kur+3')
    KJ = _Language('Niger–Congo', 'Kuanyama', ('Kuanyama',), 'kj', 'kua', 'kua', 'kua')
    LA = _Language('Indo-European', 'Latin', ('latine', 'lingua latina'), 'la', 'lat', 'lat', 'lat')
    LB = _Language('Indo-European', 'Luxembourgish', ('Lëtzebuergesch',), 'lb', 'ltz', 'ltz', 'ltz')
    LG = _Language('Niger–Congo', 'Ganda', ('Luganda',), 'lg', 'lug', 'lug', 'lug')
    LI = _Language('Indo-European', 'Limburgan', ('Limburgs',), 'li', 'lim', 'lim', 'lim')
    LN = _Language('Niger–Congo', 'Lingala', ('Lingála',), 'ln', 'lin', 'lin', 'lin')
    LO = _Language('Tai–Kadai', 'Lao', ('ພາສາລາວ',), 'lo', 'lao', 'lao', 'lao')
    LT = _Language('Indo-European', 'Lithuanian', ('lietuvių kalba',), 'lt', 'lit', 'lit', 'lit')
    LU = _Language('Niger–Congo', 'Luba-Katanga', ('Kiluba',), 'lu', 'lub', 'lub', 'lub')
    LV = _Language('Indo-European', 'Latvian', ('latviešu valoda',), 'lv', 'lav', 'lav', 'lav+2')
    GV = _Language('Indo-European', 'Manx', ('Gaelg', 'Gailck'), 'gv', 'glv', 'glv', 'glv')
    MK = _Language('Indo-European', 'Macedonian', ('македонски јазик',), 'mk', 'mkd', 'mac', 'mkd')
    MG = _Language('Austronesian', 'Malagasy', ('fiteny malagasy',), 'mg', 'mlg', 'mlg', 'mlg+11')
    MS = _Language('Austronesian', 'Malay', ('Bahasa Melayu',), 'ms', 'msa', 'may', 'msa+36')
    ML = _Language('Dravidian', 'Malayalam', ('മലയാളം',), 'ml', 'mal', 'mal', 'mal')
    MT = _Language('Afro-Asiatic', 'Maltese', ('Malti',), 'mt', 'mlt', 'mlt', 'mlt')
    MI = _Language('Austronesian', 'Maori', ('te reo Māori',), 'mi', 'mri', 'mao', 'mri')
    MR = _Language('Indo-European', 'Marathi', ('मराठी',), 'mr', 'mar', 'mar', 'mar')
    MH = _Language('Austronesian', 'Marshallese', ('Kajin M̧ajeļ',), 'mh', 'mah', 'mah', 'mah')
    MN = _Language('Mongolic', 'Mongolian', ('Монгол хэл',), 'mn', 'mon', 'mon', 'mon+2')
    NA = _Language('Austronesian', 'Nauru', ('Dorerin Naoero',), 'na', 'nau', 'nau', 'nau')
    NV = _Language('Dené–Yeniseian', 'Navajo', ('Diné bizaad',), 'nv', 'nav', 'nav', 'nav')
    ND = _Language('Niger–Congo', 'North Ndebele', ('isiNdebele',), 'nd', 'nde', 'nde', 'nde')
    NE = _Language('Indo-European', 'Nepali', ('नेपाली',), 'ne', 'nep', 'nep', 'nep+2')
    NG = _Language('Niger–Congo', 'Ndonga', ('Owambo',), 'ng', 'ndo', 'ndo', 'ndo')
    NB = _Language('Indo-European', 'Norwegian Bokmål', ('Norsk Bokmål',), 'nb', 'nob', 'nob', 'nob')
    NN = _Language('Indo-European', 'Norwegian Nynorsk', ('Norsk Nynorsk',), 'nn', 'nno', 'nno', 'nno')
    NO = _Language('Indo-European', 'Norwegian', ('Norsk',), 'no', 'nor', 'nor', 'nor+2')
    II = _Language('Sino-Tibetan', 'Sichuan Yi', ('ꆈꌠ꒿ Nuosuhxop',), 'ii', 'iii', 'iii', 'iii')
    NR = _Language('Niger–Congo', 'South Ndebele', ('isiNdebele',), 'nr', 'nbl', 'nbl', 'nbl')
    OC = _Language('Indo-European', 'Occitan', ('occitan', "lenga d'òc"), 'oc', 'oci', 'oci', 'oci')
    OJ = _Language('Algic', 'Ojibwa', ('ᐊᓂᔑᓈᐯᒧᐎᓐ',), 'oj', 'oji', 'oji', 'oji+7')
    CU = _Language('Indo-European', 'Church Slavic', ('ѩзыкъ словѣньскъ',), 'cu', 'chu', 'chu', 'chu')
    OM = _Language('Afro-Asiatic', 'Oromo', ('Afaan Oromoo',), 'om', 'orm', 'orm', 'orm+4')
    OR = _Language('Indo-European', 'Oriya', ('ଓଡ଼ିଆ',), 'or', 'ori', 'ori', 'ori+2')
    OS = _Language('Indo-European', 'Ossetian', ('ирон ӕвзаг',), 'os', 'oss', 'oss', 'oss')
    PA = _Language('Indo-European', 'Punjabi', ('ਪੰਜਾਬੀ',), 'pa', 'pan', 'pan', 'pan')
    PI = _Language('Indo-European', 'Pali', ('पालि', 'पाळि'), 'pi', 'pli', 'pli', 'pli')
    FA = _Language('Indo-European', 'Persian', ('فارسی',), 'fa', 'fas', 'per', 'fas+2')
    PL = _Language('Indo-European', 'Polish', ('język polski', 'polszczyzna'), 'pl', 'pol', 'pol', 'pol')
    PS = _Language('Indo-European', 'Pashto', ('پښتو',), 'ps', 'pus', 'pus', 'pus+3')
    PT = _Language('Indo-European', 'Portuguese', ('Português',), 'pt', 'por', 'por', 'por')
    QU = _Language('Quechuan', 'Quechua', ('Runa Simi', 'Kichwa'), 'qu', 'que', 'que', 'que+43')
    RM = _Language('Indo-European', 'Romansh', ('Rumantsch Grischun',), 'rm', 'roh', 'roh', 'roh')
    RN = _Language('Niger–Congo', 'Rundi', ('Ikirundi',), 'rn', 'run', 'run', 'run')
    RO = _Language('Indo-European', 'Romanian', ('Română', 'Moldovenească'), 'ro', 'ron', 'rum', 'ron')
    RU = _Language('Indo-European', 'Russian', ('русский',), 'ru', 'rus', 'rus', 'rus')
    SA = _Language('Indo-European', 'Sanskrit', ('संस्कृतम्',), 'sa', 'san', 'san', 'san')
    SC = _Language('Indo-European', 'Sardinian', ('sardu',), 'sc', 'srd', 'srd', 'srd+4')
    SD = _Language('Indo-European', 'Sindhi', ('सिंधी',), 'sd', 'snd', 'snd', 'snd')
    SE = _Language('Uralic', 'Northern Sami', ('Davvisámegiella',), 'se', 'sme', 'sme', 'sme')
    SM = _Language('Austronesian', 'Samoan', ("gagana fa'a Samoa",), 'sm', 'smo', 'smo', 'smo')
    SG = _Language('Creole', 'Sango', ('yângâ tî sängö',), 'sg', 'sag', 'sag', 'sag')
    SR = _Language('Indo-European', 'Serbian', ('српски језик',), 'sr', 'srp', 'srp', 'srp')
    GD = _Language('Indo-European', 'Gaelic', ('Gàidhlig',), 'gd', 'gla', 'gla', 'gla')
    SN = _Language('Niger–Congo', 'Shona', ('chiShona',), 'sn', 'sna', 'sna', 'sna')
    SI = _Language('Indo-European', 'Sinhala', ('සිංහල',), 'si', 'sin', 'sin', 'sin')
    SK = _Language('Indo-European', 'Slovak', ('slovenčina', 'slovenský jazyk'), 'sk', 'slk', 'slo', 'slk')
    SL = _Language('Indo-European', 'Slovenian', ('Slovenski jezik', 'Slovenščina'), 'sl', 'slv', 'slv', 'slv')
    SO = _Language('Afro-Asiatic', 'Somali', ('Soomaaliga', 'af Soomaali'), 'so', 'som', 'som', 'som')
    ST = _Language('Niger–Congo', 'Southern Sotho', ('Sesotho',), 'st', 'sot', 'sot', 'sot')
    ES = _Language('Indo-European', 'Spanish', ('Español',), 'es', 'spa', 'spa', 'spa')
    SU = _Language('Austronesian', 'Sundanese', ('Basa Sunda',), 'su', 'sun', 'sun', 'sun')
    SW = _Language('Niger–Congo', 'Swahili', ('Kiswahili',), 'sw', 'swa', 'swa', 'swa+2')
    SS = _Language('Niger–Congo', 'Swati', ('SiSwati',), 'ss', 'ssw', 'ssw', 'ssw')
    SV = _Language('Indo-European', 'Swedish', ('Svenska',), 'sv', 'swe', 'swe', 'swe')
    TA = _Language('Dravidian', 'Tamil', ('தமிழ்',), 'ta', 'tam', 'tam', 'tam')
    TE = _Language('Dravidian', 'Telugu', ('తెలుగు',), 'te', 'tel', 'tel', 'tel')
    TG = _Language('Indo-European', 'Tajik', ('тоҷикӣ',), 'tg', 'tgk', 'tgk', 'tgk')
    TH = _Language('Tai–Kadai', 'Thai', ('ไทย',), 'th', 'tha', 'tha', 'tha')
    TI = _Language('Afro-Asiatic', 'Tigrinya', ('ትግርኛ',), 'ti', 'tir', 'tir', 'tir')
    BO = _Language('Sino-Tibetan', 'Tibetan', ('བོད་ཡིག',), 'bo', 'bod', 'tib', 'bod')
    TK = _Language('Turkic', 'Turkmen', ('Türkmençe', 'Türkmen dili'), 'tk', 'tuk', 'tuk', 'tuk')
    TL = _Language('Austronesian', 'Tagalog', ('Wikang Tagalog',), 'tl', 'tgl', 'tgl', 'tgl')
    TN = _Language('Niger–Congo', 'Tswana', ('Setswana',), 'tn', 'tsn', 'tsn', 'tsn')
    TO = _Language('Austronesian', 'Tonga', ('Faka Tonga',), 'to', 'ton', 'ton', 'ton')
    TR = _Language('Turkic', 'Turkish', ('Türkçe',), 'tr', 'tur', 'tur', 'tur')
    TS = _Language('Niger–Congo', 'Tsonga', ('Xitsonga',), 'ts', 'tso', 'tso', 'tso')
    TT = _Language('Turkic', 'Tatar', ('татар теле',), 'tt', 'tat', 'tat', 'tat')
    TW = _Language('Niger–Congo', 'Twi', ('Twi',), 'tw', 'twi', 'twi', 'twi')
    TY = _Language('Austronesian', 'Tahitian', ('Reo Tahiti',), 'ty', 'tah', 'tah', 'tah')
    UG = _Language('Turkic', 'Uighur', ('ئۇيغۇرچە',), 'ug', 'uig', 'uig', 'uig')
    UK = _Language('Indo-European', 'Ukrainian', ('Українська',), 'uk', 'ukr', 'ukr', 'ukr')
    UR = _Language('Indo-European', 'Urdu', ('اردو',), 'ur', 'urd', 'urd', 'urd')
    UZ = _Language('Turkic', 'Uzbek', ('Oʻzbek',), 'uz', 'uzb', 'uzb', 'uzb+2')
    VE = _Language('Niger–Congo', 'Venda', ('Tshivenḓa',), 've', 'ven', 'ven', 'ven')
    VI = _Language('Austroasiatic', 'Vietnamese', ('Tiếng Việt',), 'vi', 'vie', 'vie', 'vie')
    VO = _Language('Constructed', 'Volapük', ('Volapük',), 'vo', 'vol', 'vol', 'vol')
    WA = _Language('Indo-European', 'Walloon', ('Walon',), 'wa', 'wln', 'wln', 'wln')
    CY = _Language('Indo-European', 'Welsh', ('Cymraeg',), 'cy', 'cym', 'wel', 'cym')
    WO = _Language('Niger–Congo', 'Wolof', ('Wollof',), 'wo', 'wol', 'wol', 'wol')
    FY = _Language('Indo-European', 'Western Frisian', ('Frysk',), 'fy', 'fry', 'fry', 'fry')
    XH = _Language('Niger–Congo', 'Xhosa', ('isiXhosa',), 'xh', 'xho', 'xho', 'xho')
    YI = _Language('Indo-European', 'Yiddish', ('ייִדיש',), 'yi', 'yid', 'yid', 'yid+2')
    YO = _Language('Niger–Congo', 'Yoruba', ('Yorùbá',), 'yo', 'yor', 'yor', 'yor')
    ZA = _Language('Tai–Kadai', 'Zhuang', ('Saɯ cueŋƅ', 'Saw cuengh'), 'za', 'zha', 'zha', 'zha+16')
    ZU = _Language('Niger–Congo', 'Zulu', ('isiZulu',), 'zu', 'zul', 'zul', 'zul')


class _ISO3166(_Vars):
    def __getitem__(self, name) -> _Country:
        return self._vars[name]


class Country(metaclass=_ISO3166):
    AFGH = _Country('Afghanistan', 'The Islamic Republic of Afghanistan', 'UN member state', 'AF', 'AFG', '004',
                    ('.af',))
    AKRO = _Country('Akrotiri and Dhekelia', 'The United Kingdom of Great Britain and Northern Ireland',
                    'UN member state', 'GB', 'GBR', '826', ('.gb', '.uk'))
    ALAN = _Country('Åland Islands', 'Åland', 'Finland', 'AX', 'ALA', '248', ('.ax',))
    ALBA = _Country('Albania', 'The Republic of Albania', 'UN member state', 'AL', 'ALB', '008', ('.al',))
    ALGE = _Country('Algeria', 'The People\'s Democratic Republic of Algeria', 'UN member state', 'DZ', 'DZA', '012',
                    ('.dz',))
    AMER = _Country('American Samoa', 'The Territory of American Samoa', 'United States', 'AS', 'ASM', '016', ('.as',))
    ANDO = _Country('Andorra', 'The Principality of Andorra', 'UN member state', 'AD', 'AND', '020', ('.ad',))
    ANGO = _Country('Angola', 'The Republic of Angola', 'UN member state', 'AO', 'AGO', '024', ('.ao',))
    ANGU = _Country('Anguilla', 'Anguilla', 'United Kingdom', 'AI', 'AIA', '660', ('.ai',))
    ANTA = _Country('Antarctica', 'All land and ice shelves south of the ', 'Antarctic Treaty', 'AQ', 'ATA', '010',
                    ('.aq',))
    ANTI = _Country('Antigua and Barbuda', 'Antigua and Barbuda', 'UN member state', 'AG', 'ATG', '028', ('.ag',))
    ARGE = _Country('Argentina', 'The Argentine Republic', 'UN member state', 'AR', 'ARG', '032', ('.ar',))
    ARME = _Country('Armenia', 'The Republic of Armenia', 'UN member state', 'AM', 'ARM', '051', ('.am',))
    ARUB = _Country('Aruba', 'Aruba', 'Netherlands', 'AW', 'ABW', '533', ('.aw',))
    ASHM = _Country('Ashmore and Cartier Islands', 'The Commonwealth of Australia', 'UN member state', 'AU', 'AUS',
                    '036', ('.au',))
    AUS1 = _Country('Australia', 'The Commonwealth of Australia', 'UN member state', 'AU', 'AUS', '036', ('.au',))
    AUS2 = _Country('Austria', 'The Republic of Austria', 'UN member state', 'AT', 'AUT', '040', ('.at',))
    AZER = _Country('Azerbaijan', 'The Republic of Azerbaijan', 'UN member state', 'AZ', 'AZE', '031', ('.az',))
    BAHA = _Country('Bahamas (the)', 'The Commonwealth of The Bahamas', 'UN member state', 'BS', 'BHS', '044', ('.bs',))
    BAHR = _Country('Bahrain', 'The Kingdom of Bahrain', 'UN member state', 'BH', 'BHR', '048', ('.bh',))
    BANG = _Country('Bangladesh', 'The People\'s Republic of Bangladesh', 'UN member state', 'BD', 'BGD', '050',
                    ('.bd',))
    BARB = _Country('Barbados', 'Barbados', 'UN member state', 'BB', 'BRB', '052', ('.bb',))
    BELA = _Country('Belarus', 'The Republic of Belarus', 'UN member state', 'BY', 'BLR', '112', ('.by',))
    BELG = _Country('Belgium', 'The Kingdom of Belgium', 'UN member state', 'BE', 'BEL', '056', ('.be',))
    BELI = _Country('Belize', 'Belize', 'UN member state', 'BZ', 'BLZ', '084', ('.bz',))
    BENI = _Country('Benin', 'The Republic of Benin', 'UN member state', 'BJ', 'BEN', '204', ('.bj',))
    BERM = _Country('Bermuda', 'Bermuda', 'United Kingdom', 'BM', 'BMU', '060', ('.bm',))
    BHUT = _Country('Bhutan', 'The Kingdom of Bhutan', 'UN member state', 'BT', 'BTN', '064', ('.bt',))
    BOLI = _Country('Bolivia (Plurinational State of)', 'The Plurinational State of Bolivia', 'UN member state', 'BO',
                    'BOL', '068', ('.bo',))
    BONA = _Country('Bonaire', 'Bonaire, Sint Eustatius and Saba', 'Netherlands', 'BQ', 'BES', '535', ('.bq', '.nl'))
    BOSN = _Country('Bosnia and Herzegovina', 'Bosnia and Herzegovina', 'UN member state', 'BA', 'BIH', '070', ('.ba',))
    BOTS = _Country('Botswana', 'The Republic of Botswana', 'UN member state', 'BW', 'BWA', '072', ('.bw',))
    BOUV = _Country('Bouvet Island', 'Bouvet Island', 'Norway', 'BV', 'BVT', '074', ())
    BRAZ = _Country('Brazil', 'The Federative Republic of Brazil', 'UN member state', 'BR', 'BRA', '076', ('.br',))
    BRI1 = _Country('British Indian Ocean Territory (the)', 'The British Indian Ocean Territory', 'United Kingdom',
                    'IO', 'IOT', '086', ('.io',))
    BRI2 = _Country('British Virgin Islands', 'The Virgin Islands', 'United Kingdom', 'VG', 'VGB', '092', ('.vg',))
    BRUN = _Country('Brunei Darussalam', 'The Nation of Brunei, the Abode of Peace', 'UN member state', 'BN', 'BRN',
                    '096', ('.bn',))
    BULG = _Country('Bulgaria', 'The Republic of Bulgaria', 'UN member state', 'BG', 'BGR', '100', ('.bg',))
    BURK = _Country('Burkina Faso', 'Burkina Faso', 'UN member state', 'BF', 'BFA', '854', ('.bf',))
    BURM = _Country('Burma', 'The Republic of the Union of Myanmar', 'UN member state', 'MM', 'MMR', '104', ('.mm',))
    BURU = _Country('Burundi', 'The Republic of Burundi', 'UN member state', 'BI', 'BDI', '108', ('.bi',))
    CABO = _Country('Cabo Verde', 'The Republic of Cabo Verde', 'UN member state', 'CV', 'CPV', '132', ('.cv',))
    CAMB = _Country('Cambodia', 'The Kingdom of Cambodia', 'UN member state', 'KH', 'KHM', '116', ('.kh',))
    CAME = _Country('Cameroon', 'The Republic of Cameroon', 'UN member state', 'CM', 'CMR', '120', ('.cm',))
    CANA = _Country('Canada', 'Canada', 'UN member state', 'CA', 'CAN', '124', ('.ca',))
    CAPE = _Country('Cape Verde', 'The Republic of Cabo Verde', 'UN member state', 'CV', 'CPV', '132', ('.cv',))
    CARI = _Country('Caribbean Netherlands', 'Bonaire, Sint Eustatius and Saba', 'Netherlands', 'BQ', 'BES', '535',
                    ('.bq', '.nl'))
    CAYM = _Country('Cayman Islands (the)', 'The Cayman Islands', 'United Kingdom', 'KY', 'CYM', '136', ('.ky',))
    CENT = _Country('Central African Republic (the)', 'The Central African Republic', 'UN member state', 'CF', 'CAF',
                    '140', ('.cf',))
    CHAD = _Country('Chad', 'The Republic of Chad', 'UN member state', 'TD', 'TCD', '148', ('.td',))
    CHI1 = _Country('Chile', 'The Republic of Chile', 'UN member state', 'CL', 'CHL', '152', ('.cl',))
    CHI2 = _Country('China', 'The People\'s Republic of China', 'UN member state', 'CN', 'CHN', '156', ('.cn',))
    CHI3 = _Country('China, The Republic of', 'The Republic of China', 'Disputed', 'TW', 'TWN', '158', ('.tw',))
    CHRI = _Country('Christmas Island', 'The Territory of Christmas Island', 'Australia', 'CX', 'CXR', '162', ('.cx',))
    CLIP = _Country('Clipperton Island', 'The French Republic', 'UN member state', 'FR', 'FRA', '250', ('.fr',))
    COCO = _Country('Cocos (Keeling) Islands (the)', 'The Territory of Cocos (Keeling) Islands', 'Australia', 'CC',
                    'CCK', '166', ('.cc',))
    COLO = _Country('Colombia', 'The Republic of Colombia', 'UN member state', 'CO', 'COL', '170', ('.co',))
    COMO = _Country('Comoros (the)', 'The Union of the Comoros', 'UN member state', 'KM', 'COM', '174', ('.km',))
    CON1 = _Country('Congo (the Democratic Republic of the)', 'The Democratic Republic of the Congo', 'UN member state',
                    'CD', 'COD', '180', ('.cd',))
    CON2 = _Country('Congo (the)', 'The Republic of the Congo', 'UN member state', 'CG', 'COG', '178', ('.cg',))
    COOK = _Country('Cook Islands (the)', 'The Cook Islands', 'New Zealand', 'CK', 'COK', '184', ('.ck',))
    CORA = _Country('Coral Sea Islands', 'The Commonwealth of Australia', 'UN member state', 'AU', 'AUS', '036',
                    ('.au',))
    COST = _Country('Costa Rica', 'The Republic of Costa Rica', 'UN member state', 'CR', 'CRI', '188', ('.cr',))
    COTE = _Country('Côte d\'Ivoire', 'The Republic of Côte d\'Ivoire', 'UN member state', 'CI', 'CIV', '384', ('.ci',))
    CROA = _Country('Croatia', 'The Republic of Croatia', 'UN member state', 'HR', 'HRV', '191', ('.hr',))
    CUBA = _Country('Cuba', 'The Republic of Cuba', 'UN member state', 'CU', 'CUB', '192', ('.cu',))
    CURA = _Country('Curaçao', 'The Country of Curaçao', 'Netherlands', 'CW', 'CUW', '531', ('.cw',))
    CYPR = _Country('Cyprus', 'The Republic of Cyprus', 'UN member state', 'CY', 'CYP', '196', ('.cy',))
    CZEC = _Country('Czechia', 'The Czech Republic', 'UN member state', 'CZ', 'CZE', '203', ('.cz',))
    DEM1 = _Country('Democratic People\'s Republic of Korea', 'The Democratic People\'s Republic of Korea',
                    'UN member state', 'KP', 'PRK', '408', ('.kp',))
    DEM2 = _Country('Democratic Republic of the Congo', 'The Democratic Republic of the Congo', 'UN member state', 'CD',
                    'COD', '180', ('.cd',))
    DENM = _Country('Denmark', 'The Kingdom of Denmark', 'UN member state', 'DK', 'DNK', '208', ('.dk',))
    DJIB = _Country('Djibouti', 'The Republic of Djibouti', 'UN member state', 'DJ', 'DJI', '262', ('.dj',))
    DOM1 = _Country('Dominica', 'The Commonwealth of Dominica', 'UN member state', 'DM', 'DMA', '212', ('.dm',))
    DOM2 = _Country('Dominican Republic (the)', 'The Dominican Republic', 'UN member state', 'DO', 'DOM', '214',
                    ('.do',))
    EAST = _Country('East Timor', 'The Democratic Republic of Timor-Leste', 'UN member state', 'TL', 'TLS', '626',
                    ('.tl',))
    ECUA = _Country('Ecuador', 'The Republic of Ecuador', 'UN member state', 'EC', 'ECU', '218', ('.ec',))
    EGYP = _Country('Egypt', 'The Arab Republic of Egypt', 'UN member state', 'EG', 'EGY', '818', ('.eg',))
    ELSA = _Country('El Salvador', 'The Republic of El Salvador', 'UN member state', 'SV', 'SLV', '222', ('.sv',))
    ENGL = _Country('England', 'The United Kingdom of Great Britain and Northern Ireland', 'UN member state', 'GB',
                    'GBR', '826', ('.gb', '.uk'))
    EQUA = _Country('Equatorial Guinea', 'The Republic of Equatorial Guinea', 'UN member state', 'GQ', 'GNQ', '226',
                    ('.gq',))
    ERIT = _Country('Eritrea', 'The State of Eritrea', 'UN member state', 'ER', 'ERI', '232', ('.er',))
    ESTO = _Country('Estonia', 'The Republic of Estonia', 'UN member state', 'EE', 'EST', '233', ('.ee',))
    ESWA = _Country('Eswatini', 'The Kingdom of Eswatini', 'UN member state', 'SZ', 'SWZ', '748', ('.sz',))
    ETHI = _Country('Ethiopia', 'The Federal Democratic Republic of Ethiopia', 'UN member state', 'ET', 'ETH', '231',
                    ('.et',))
    FALK = _Country('Falkland Islands (the) [Malvinas]', 'The Falkland Islands', 'United Kingdom', 'FK', 'FLK', '238',
                    ('.fk',))
    FARO = _Country('Faroe Islands (the)', 'The Faroe Islands', 'Denmark', 'FO', 'FRO', '234', ('.fo',))
    FIJI = _Country('Fiji', 'The Republic of Fiji', 'UN member state', 'FJ', 'FJI', '242', ('.fj',))
    FINL = _Country('Finland', 'The Republic of Finland', 'UN member state', 'FI', 'FIN', '246', ('.fi',))
    FRAN = _Country('France', 'The French Republic', 'UN member state', 'FR', 'FRA', '250', ('.fr',))
    FRE1 = _Country('French Guiana', 'Guyane', 'France', 'GF', 'GUF', '254', ('.gf',))
    FRE2 = _Country('French Polynesia', 'French Polynesia', 'France', 'PF', 'PYF', '258', ('.pf',))
    FRE3 = _Country('French Southern Territories (the)', 'The French Southern and Antarctic Lands', 'France', 'TF',
                    'ATF', '260', ('.tf',))
    GABO = _Country('Gabon', 'The Gabonese Republic', 'UN member state', 'GA', 'GAB', '266', ('.ga',))
    GAMB = _Country('Gambia (the)', 'The Republic of The Gambia', 'UN member state', 'GM', 'GMB', '270', ('.gm',))
    GEOR = _Country('Georgia', 'Georgia', 'UN member state', 'GE', 'GEO', '268', ('.ge',))
    GERM = _Country('Germany', 'The Federal Republic of Germany', 'UN member state', 'DE', 'DEU', '276', ('.de',))
    GHAN = _Country('Ghana', 'The Republic of Ghana', 'UN member state', 'GH', 'GHA', '288', ('.gh',))
    GIBR = _Country('Gibraltar', 'Gibraltar', 'United Kingdom', 'GI', 'GIB', '292', ('.gi',))
    GRE1 = _Country('Great Britain', 'The United Kingdom of Great Britain and Northern Ireland', 'UN member state',
                    'GB', 'GBR', '826', ('.gb', '.uk'))
    GRE2 = _Country('Greece', 'The Hellenic Republic', 'UN member state', 'GR', 'GRC', '300', ('.gr',))
    GRE3 = _Country('Greenland', 'Kalaallit Nunaat', 'Denmark', 'GL', 'GRL', '304', ('.gl',))
    GRE4 = _Country('Grenada', 'Grenada', 'UN member state', 'GD', 'GRD', '308', ('.gd',))
    GUAD = _Country('Guadeloupe', 'Guadeloupe', 'France', 'GP', 'GLP', '312', ('.gp',))
    GUAM = _Country('Guam', 'The Territory of Guam', 'United States', 'GU', 'GUM', '316', ('.gu',))
    GUAT = _Country('Guatemala', 'The Republic of Guatemala', 'UN member state', 'GT', 'GTM', '320', ('.gt',))
    GUER = _Country('Guernsey', 'The Bailiwick of Guernsey', 'British Crown', 'GG', 'GGY', '831', ('.gg',))
    GUI1 = _Country('Guinea', 'The Republic of Guinea', 'UN member state', 'GN', 'GIN', '324', ('.gn',))
    GUI2 = _Country('Guinea-Bissau', 'The Republic of Guinea-Bissau', 'UN member state', 'GW', 'GNB', '624', ('.gw',))
    GUYA = _Country('Guyana', 'The Co-operative Republic of Guyana', 'UN member state', 'GY', 'GUY', '328', ('.gy',))
    HAIT = _Country('Haiti', 'The Republic of Haiti', 'UN member state', 'HT', 'HTI', '332', ('.ht',))
    HAWA = _Country('Hawaiian Islands', 'The United States of America', 'UN member state', 'US', 'USA', '840', ('.us',))
    HEAR = _Country('Heard Island and McDonald Islands', 'The Territory of Heard Island and McDonald Islands',
                    'Australia', 'HM', 'HMD', '334', ('.hm',))
    HOLY = _Country('Holy See (the)', 'The Holy See', 'UN observer state', 'VA', 'VAT', '336', ('.va',))
    HOND = _Country('Honduras', 'The Republic of Honduras', 'UN member state', 'HN', 'HND', '340', ('.hn',))
    HONG = _Country('Hong Kong', 'The Hong Kong Special Administrative Region of China', 'China', 'HK', 'HKG', '344',
                    ('.hk',))
    HUNG = _Country('Hungary', 'Hungary', 'UN member state', 'HU', 'HUN', '348', ('.hu',))
    ICEL = _Country('Iceland', 'Iceland', 'UN member state', 'IS', 'ISL', '352', ('.is',))
    INDI = _Country('India', 'The Republic of India', 'UN member state', 'IN', 'IND', '356', ('.in',))
    INDO = _Country('Indonesia', 'The Republic of Indonesia', 'UN member state', 'ID', 'IDN', '360', ('.id',))
    IRAN = _Country('Iran (Islamic Republic of)', 'The Islamic Republic of Iran', 'UN member state', 'IR', 'IRN', '364',
                    ('.ir',))
    IRAQ = _Country('Iraq', 'The Republic of Iraq', 'UN member state', 'IQ', 'IRQ', '368', ('.iq',))
    IREL = _Country('Ireland', 'Ireland', 'UN member state', 'IE', 'IRL', '372', ('.ie',))
    ISLE = _Country('Isle of Man', 'The Isle of Man', 'British Crown', 'IM', 'IMN', '833', ('.im',))
    ISRA = _Country('Israel', 'The State of Israel', 'UN member state', 'IL', 'ISR', '376', ('.il',))
    ITAL = _Country('Italy', 'The Italian Republic', 'UN member state', 'IT', 'ITA', '380', ('.it',))
    IVOR = _Country('Ivory Coast', 'The Republic of Côte d\'Ivoire', 'UN member state', 'CI', 'CIV', '384', ('.ci',))
    JAMA = _Country('Jamaica', 'Jamaica', 'UN member state', 'JM', 'JAM', '388', ('.jm',))
    JANM = _Country('Jan Mayen', 'Svalbard and Jan Mayen', 'Norway', 'SJ', 'SJM', '744', ())
    JAPA = _Country('Japan', 'Japan', 'UN member state', 'JP', 'JPN', '392', ('.jp',))
    JERS = _Country('Jersey', 'The Bailiwick of Jersey', 'British Crown', 'JE', 'JEY', '832', ('.je',))
    JORD = _Country('Jordan', 'The Hashemite Kingdom of Jordan', 'UN member state', 'JO', 'JOR', '400', ('.jo',))
    KAZA = _Country('Kazakhstan', 'The Republic of Kazakhstan', 'UN member state', 'KZ', 'KAZ', '398', ('.kz',))
    KENY = _Country('Kenya', 'The Republic of Kenya', 'UN member state', 'KE', 'KEN', '404', ('.ke',))
    KIRI = _Country('Kiribati', 'The Republic of Kiribati', 'UN member state', 'KI', 'KIR', '296', ('.ki',))
    KOR1 = _Country('Korea (the Democratic People\'s Republic of)', 'The Democratic People\'s Republic of Korea',
                    'UN member state', 'KP', 'PRK', '408', ('.kp',))
    KOR2 = _Country('Korea (the Republic of)', 'The Republic of Korea', 'UN member state', 'KR', 'KOR', '410', ('.kr',))
    KUWA = _Country('Kuwait', 'The State of Kuwait', 'UN member state', 'KW', 'KWT', '414', ('.kw',))
    KYRG = _Country('Kyrgyzstan', 'The Kyrgyz Republic', 'UN member state', 'KG', 'KGZ', '417', ('.kg',))
    LAOS = _Country('Lao People\'s Democratic Republic (the)', 'The Lao People\'s Democratic Republic',
                    'UN member state', 'LA', 'LAO', '418', ('.la',))
    LATV = _Country('Latvia', 'The Republic of Latvia', 'UN member state', 'LV', 'LVA', '428', ('.lv',))
    LEBA = _Country('Lebanon', 'The Lebanese Republic', 'UN member state', 'LB', 'LBN', '422', ('.lb',))
    LESO = _Country('Lesotho', 'The Kingdom of Lesotho', 'UN member state', 'LS', 'LSO', '426', ('.ls',))
    LIBE = _Country('Liberia', 'The Republic of Liberia', 'UN member state', 'LR', 'LBR', '430', ('.lr',))
    LIBY = _Country('Libya', 'The State of Libya', 'UN member state', 'LY', 'LBY', '434', ('.ly',))
    LIEC = _Country('Liechtenstein', 'The Principality of Liechtenstein', 'UN member state', 'LI', 'LIE', '438',
                    ('.li',))
    LITH = _Country('Lithuania', 'The Republic of Lithuania', 'UN member state', 'LT', 'LTU', '440', ('.lt',))
    LUXE = _Country('Luxembourg', 'The Grand Duchy of Luxembourg', 'UN member state', 'LU', 'LUX', '442', ('.lu',))
    MACA = _Country('Macao', 'The Macao Special Administrative Region of China', 'China', 'MO', 'MAC', '446', ('.mo',))
    MACE = _Country('North Macedonia', 'The Republic of North Macedonia', 'UN member state', 'MK', 'MKD', '807',
                    ('.mk',))
    MADA = _Country('Madagascar', 'The Republic of Madagascar', 'UN member state', 'MG', 'MDG', '450', ('.mg',))
    MAL1 = _Country('Malawi', 'The Republic of Malawi', 'UN member state', 'MW', 'MWI', '454', ('.mw',))
    MAL2 = _Country('Malaysia', 'Malaysia', 'UN member state', 'MY', 'MYS', '458', ('.my',))
    MAL3 = _Country('Maldives', 'The Republic of Maldives', 'UN member state', 'MV', 'MDV', '462', ('.mv',))
    MAL4 = _Country('Mali', 'The Republic of Mali', 'UN member state', 'ML', 'MLI', '466', ('.ml',))
    MAL5 = _Country('Malta', 'The Republic of Malta', 'UN member state', 'MT', 'MLT', '470', ('.mt',))
    MARS = _Country('Marshall Islands (the)', 'The Republic of the Marshall Islands', 'UN member state', 'MH', 'MHL',
                    '584', ('.mh',))
    MART = _Country('Martinique', 'Martinique', 'France', 'MQ', 'MTQ', '474', ('.mq',))
    MAU1 = _Country('Mauritania', 'The Islamic Republic of Mauritania', 'UN member state', 'MR', 'MRT', '478', ('.mr',))
    MAU2 = _Country('Mauritius', 'The Republic of Mauritius', 'UN member state', 'MU', 'MUS', '480', ('.mu',))
    MAYO = _Country('Mayotte', 'The Department of Mayotte', 'France', 'YT', 'MYT', '175', ('.yt',))
    MEXI = _Country('Mexico', 'The United Mexican States', 'UN member state', 'MX', 'MEX', '484', ('.mx',))
    MICR = _Country('Micronesia (Federated States of)', 'The Federated States of Micronesia', 'UN member state', 'FM',
                    'FSM', '583', ('.fm',))
    MOLD = _Country('Moldova (the Republic of)', 'The Republic of Moldova', 'UN member state', 'MD', 'MDA', '498',
                    ('.md',))
    MON1 = _Country('Monaco', 'The Principality of Monaco', 'UN member state', 'MC', 'MCO', '492', ('.mc',))
    MON2 = _Country('Mongolia', 'Mongolia', 'UN member state', 'MN', 'MNG', '496', ('.mn',))
    MON3 = _Country('Montenegro', 'Montenegro', 'UN member state', 'ME', 'MNE', '499', ('.me',))
    MON4 = _Country('Montserrat', 'Montserrat', 'United Kingdom', 'MS', 'MSR', '500', ('.ms',))
    MORO = _Country('Morocco', 'The Kingdom of Morocco', 'UN member state', 'MA', 'MAR', '504', ('.ma',))
    MOZA = _Country('Mozambique', 'The Republic of Mozambique', 'UN member state', 'MZ', 'MOZ', '508', ('.mz',))
    MYAN = _Country('Myanmar', 'The Republic of the Union of Myanmar', 'UN member state', 'MM', 'MMR', '104', ('.mm',))
    NAMI = _Country('Namibia', 'The Republic of Namibia', 'UN member state', 'NA', 'NAM', '516', ('.na',))
    NAUR = _Country('Nauru', 'The Republic of Nauru', 'UN member state', 'NR', 'NRU', '520', ('.nr',))
    NEPA = _Country('Nepal', 'The Federal Democratic Republic of Nepal', 'UN member state', 'NP', 'NPL', '524',
                    ('.np',))
    NETH = _Country('Netherlands (the)', 'The Kingdom of the Netherlands', 'UN member state', 'NL', 'NLD', '528',
                    ('.nl',))
    NEWC = _Country('New Caledonia', 'New Caledonia', 'France', 'NC', 'NCL', '540', ('.nc',))
    NEWZ = _Country('New Zealand', 'New Zealand', 'UN member state', 'NZ', 'NZL', '554', ('.nz',))
    NICA = _Country('Nicaragua', 'The Republic of Nicaragua', 'UN member state', 'NI', 'NIC', '558', ('.ni',))
    NIG1 = _Country('Niger (the)', 'The Republic of the Niger', 'UN member state', 'NE', 'NER', '562', ('.ne',))
    NIG2 = _Country('Nigeria', 'The Federal Republic of Nigeria', 'UN member state', 'NG', 'NGA', '566', ('.ng',))
    NIUE = _Country('Niue', 'Niue', 'New Zealand', 'NU', 'NIU', '570', ('.nu',))
    NOR1 = _Country('Norfolk Island', 'The Territory of Norfolk Island', 'Australia', 'NF', 'NFK', '574', ('.nf',))
    NOR2 = _Country('North Korea', 'The Democratic People\'s Republic of Korea', 'UN member state', 'KP', 'PRK', '408',
                    ('.kp',))
    NOR3 = _Country('Northern Ireland', 'The United Kingdom of Great Britain and Northern Ireland', 'UN member state',
                    'GB', 'GBR', '826', ('.gb', '.uk'))
    NOR4 = _Country('Northern Mariana Islands (the)', 'The Commonwealth of the Northern Mariana Islands',
                    'United States', 'MP', 'MNP', '580', ('.mp',))
    NOR5 = _Country('Norway', 'The Kingdom of Norway', 'UN member state', 'NO', 'NOR', '578', ('.no',))
    OMAN = _Country('Oman', 'The Sultanate of Oman', 'UN member state', 'OM', 'OMN', '512', ('.om',))
    PAKI = _Country('Pakistan', 'The Islamic Republic of Pakistan', 'UN member state', 'PK', 'PAK', '586', ('.pk',))
    PAL1 = _Country('Palau', 'The Republic of Palau', 'UN member state', 'PW', 'PLW', '585', ('.pw',))
    PAL2 = _Country('Palestine, State of', 'The State of Palestine', 'UN observer state', 'PS', 'PSE', '275', ('.ps',))
    PANA = _Country('Panama', 'The Republic of Panamá', 'UN member state', 'PA', 'PAN', '591', ('.pa',))
    PAPU = _Country('Papua New Guinea', 'The Independent State of Papua New Guinea', 'UN member state', 'PG', 'PNG',
                    '598', ('.pg',))
    PARA = _Country('Paraguay', 'The Republic of Paraguay', 'UN member state', 'PY', 'PRY', '600', ('.py',))
    PEOP = _Country('People\'s Republic of China', 'The People\'s Republic of China', 'UN member state', 'CN', 'CHN',
                    '156', ('.cn',))
    PERU = _Country('Peru', 'The Republic of Perú', 'UN member state', 'PE', 'PER', '604', ('.pe',))
    PHIL = _Country('Philippines (the)', 'The Republic of the Philippines', 'UN member state', 'PH', 'PHL', '608',
                    ('.ph',))
    PITC = _Country('Pitcairn', 'The Pitcairn, Henderson, Ducie and Oeno Islands', 'United Kingdom', 'PN', 'PCN', '612',
                    ('.pn',))
    POLA = _Country('Poland', 'The Republic of Poland', 'UN member state', 'PL', 'POL', '616', ('.pl',))
    PORT = _Country('Portugal', 'The Portuguese Republic', 'UN member state', 'PT', 'PRT', '620', ('.pt',))
    PUER = _Country('Puerto Rico', 'The Commonwealth of Puerto Rico', 'United States', 'PR', 'PRI', '630', ('.pr',))
    QATA = _Country('Qatar', 'The State of Qatar', 'UN member state', 'QA', 'QAT', '634', ('.qa',))
    REP1 = _Country('Republic of China', 'The Republic of China', 'Disputed', 'TW', 'TWN', '158', ('.tw',))
    REP2 = _Country('Republic of Korea', 'The Republic of Korea', 'UN member state', 'KR', 'KOR', '410', ('.kr',))
    REP3 = _Country('Republic of the Congo', 'The Republic of the Congo', 'UN member state', 'CG', 'COG', '178',
                    ('.cg',))
    REUN = _Country('Réunion', 'Réunion', 'France', 'RE', 'REU', '638', ('.re',))
    ROMA = _Country('Romania', 'Romania', 'UN member state', 'RO', 'ROU', '642', ('.ro',))
    RUSS = _Country('Russian Federation (the)', 'The Russian Federation', 'UN member state', 'RU', 'RUS', '643',
                    ('.ru',))
    RWAN = _Country('Rwanda', 'The Republic of Rwanda', 'UN member state', 'RW', 'RWA', '646', ('.rw',))
    SABA = _Country('Saba', 'Bonaire, Sint Eustatius and Saba', 'Netherlands', 'BQ', 'BES', '535', ('.bq', '.nl'))
    SAHR = _Country('Sahrawi Arab Democratic Republic', 'The Sahrawi Arab Democratic Republic', 'Disputed', 'EH', 'ESH',
                    '732', ())
    SAI1 = _Country('Saint Barthélemy', 'The Collectivity of Saint-Barthélemy', 'France', 'BL', 'BLM', '652', ('.bl',))
    SAI2 = _Country('Saint Helena', 'Saint Helena, Ascension and Tristan da Cunha', 'United Kingdom', 'SH', 'SHN',
                    '654', ('.sh',))
    SAI3 = _Country('Saint Kitts and Nevis', 'Saint Kitts and Nevis', 'UN member state', 'KN', 'KNA', '659', ('.kn',))
    SAI4 = _Country('Saint Lucia', 'Saint Lucia', 'UN member state', 'LC', 'LCA', '662', ('.lc',))
    SAI5 = _Country('Saint Martin (French part)', 'The Collectivity of Saint-Martin', 'France', 'MF', 'MAF', '663',
                    ('.mf',))
    SAI6 = _Country('Saint Pierre and Miquelon', 'The Overseas Collectivity of Saint-Pierre and Miquelon', 'France',
                    'PM', 'SPM', '666', ('.pm',))
    SAI7 = _Country('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines', 'UN member state', 'VC',
                    'VCT', '670', ('.vc',))
    SAMO = _Country('Samoa', 'The Independent State of Samoa', 'UN member state', 'WS', 'WSM', '882', ('.ws',))
    SAN = _Country('San Marino', 'The Republic of San Marino', 'UN member state', 'SM', 'SMR', '674', ('.sm',))
    SAOT = _Country('Sao Tome and Principe', 'The Democratic Republic of São Tomé and Príncipe', 'UN member state',
                    'ST', 'STP', '678', ('.st',))
    SAUD = _Country('Saudi Arabia', 'The Kingdom of Saudi Arabia', 'UN member state', 'SA', 'SAU', '682', ('.sa',))
    SCOT = _Country('Scotland', 'The United Kingdom of Great Britain and Northern Ireland', 'UN member state', 'GB',
                    'GBR', '826', ('.gb', '.uk'))
    SENE = _Country('Senegal', 'The Republic of Senegal', 'UN member state', 'SN', 'SEN', '686', ('.sn',))
    SERB = _Country('Serbia', 'The Republic of Serbia', 'UN member state', 'RS', 'SRB', '688', ('.rs',))
    SEYC = _Country('Seychelles', 'The Republic of Seychelles', 'UN member state', 'SC', 'SYC', '690', ('.sc',))
    SIER = _Country('Sierra Leone', 'The Republic of Sierra Leone', 'UN member state', 'SL', 'SLE', '694', ('.sl',))
    SIN1 = _Country('Singapore', 'The Republic of Singapore', 'UN member state', 'SG', 'SGP', '702', ('.sg',))
    SIN2 = _Country('Sint Eustatius', 'Bonaire, Sint Eustatius and Saba', 'Netherlands', 'BQ', 'BES', '535',
                    ('.bq', '.nl'))
    SIN3 = _Country('Sint Maarten (Dutch part)', 'Sint Maarten', 'Netherlands', 'SX', 'SXM', '534', ('.sx',))
    SLO1 = _Country('Slovakia', 'The Slovak Republic', 'UN member state', 'SK', 'SVK', '703', ('.sk',))
    SLO2 = _Country('Slovenia', 'The Republic of Slovenia', 'UN member state', 'SI', 'SVN', '705', ('.si',))
    SOLO = _Country('Solomon Islands', 'The Solomon Islands', 'UN member state', 'SB', 'SLB', '090', ('.sb',))
    SOMA = _Country('Somalia', 'The Federal Republic of Somalia', 'UN member state', 'SO', 'SOM', '706', ('.so',))
    SOU1 = _Country('South Africa', 'The Republic of South Africa', 'UN member state', 'ZA', 'ZAF', '710', ('.za',))
    SOU2 = _Country('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands',
                    'United Kingdom', 'GS', 'SGS', '239', ('.gs',))
    SOU3 = _Country('South Korea', 'The Republic of Korea', 'UN member state', 'KR', 'KOR', '410', ('.kr',))
    SOU4 = _Country('South Sudan', 'The Republic of South Sudan', 'UN member state', 'SS', 'SSD', '728', ('.ss',))
    SPAI = _Country('Spain', 'The Kingdom of Spain', 'UN member state', 'ES', 'ESP', '724', ('.es',))
    SRIL = _Country('Sri Lanka', 'The Democratic Socialist Republic of Sri Lanka', 'UN member state', 'LK', 'LKA',
                    '144', ('.lk',))
    SUDA = _Country('Sudan (the)', 'The Republic of the Sudan', 'UN member state', 'SD', 'SDN', '729', ('.sd',))
    SURI = _Country('Suriname', 'The Republic of Suriname', 'UN member state', 'SR', 'SUR', '740', ('.sr',))
    SVAL = _Country('Svalbard', 'Svalbard and Jan Mayen', 'Norway', 'SJ', 'SJM', '744', ())
    SWED = _Country('Sweden', 'The Kingdom of Sweden', 'UN member state', 'SE', 'SWE', '752', ('.se',))
    SWIT = _Country('Switzerland', 'The Swiss Confederation', 'UN member state', 'CH', 'CHE', '756', ('.ch',))
    SYRI = _Country('Syrian Arab Republic (the)', 'The Syrian Arab Republic', 'UN member state', 'SY', 'SYR', '760',
                    ('.sy',))
    TAIW = _Country('Taiwan (Province of China)', 'The Republic of China', 'Disputed', 'TW', 'TWN', '158', ('.tw',))
    TAJI = _Country('Tajikistan', 'The Republic of Tajikistan', 'UN member state', 'TJ', 'TJK', '762', ('.tj',))
    TANZ = _Country('Tanzania, the United Republic of', 'The United Republic of Tanzania', 'UN member state', 'TZ',
                    'TZA', '834', ('.tz',))
    THAI = _Country('Thailand', 'The Kingdom of Thailand', 'UN member state', 'TH', 'THA', '764', ('.th',))
    TIMO = _Country('Timor-Leste', 'The Democratic Republic of Timor-Leste', 'UN member state', 'TL', 'TLS', '626',
                    ('.tl',))
    TOGO = _Country('Togo', 'The Togolese Republic', 'UN member state', 'TG', 'TGO', '768', ('.tg',))
    TOKE = _Country('Tokelau', 'Tokelau', 'New Zealand', 'TK', 'TKL', '772', ('.tk',))
    TONG = _Country('Tonga', 'The Kingdom of Tonga', 'UN member state', 'TO', 'TON', '776', ('.to',))
    TRIN = _Country('Trinidad and Tobago', 'The Republic of Trinidad and Tobago', 'UN member state', 'TT', 'TTO', '780',
                    ('.tt',))
    TUNI = _Country('Tunisia', 'The Republic of Tunisia', 'UN member state', 'TN', 'TUN', '788', ('.tn',))
    TUR1 = _Country('Turkey', 'The Republic of Turkey', 'UN member state', 'TR', 'TUR', '792', ('.tr',))
    TUR2 = _Country('Turkmenistan', 'Turkmenistan', 'UN member state', 'TM', 'TKM', '795', ('.tm',))
    TUR3 = _Country('Turks and Caicos Islands (the)', 'The Turks and Caicos Islands', 'United Kingdom', 'TC', 'TCA',
                    '796', ('.tc',))
    TUVA = _Country('Tuvalu', 'Tuvalu', 'UN member state', 'TV', 'TUV', '798', ('.tv',))
    UGAN = _Country('Uganda', 'The Republic of Uganda', 'UN member state', 'UG', 'UGA', '800', ('.ug',))
    UKRA = _Country('Ukraine', 'Ukraine', 'UN member state', 'UA', 'UKR', '804', ('.ua',))
    UNI1 = _Country('United Arab Emirates (the)', 'The United Arab Emirates', 'UN member state', 'AE', 'ARE', '784',
                    ('.ae',))
    UNI2 = _Country('United Kingdom of Great Britain and Northern Ireland (the)',
                    'The United Kingdom of Great Britain and Northern Ireland', 'UN member state', 'GB', 'GBR', '826',
                    ('.gb', '.uk'))
    UNI3 = _Country('United States Minor Outlying Islands (the)', 'Baker Island', 'United States', 'UM', 'UMI', '581',
                    ())
    UNI4 = _Country('United States of America (the)', 'The United States of America', 'UN member state', 'US', 'USA',
                    '840', ('.us',))
    UNI5 = _Country('United States Virgin Islands', 'The Virgin Islands of the United States', 'United States', 'VI',
                    'VIR', '850', ('.vi',))
    URUG = _Country('Uruguay', 'The Oriental Republic of Uruguay', 'UN member state', 'UY', 'URY', '858', ('.uy',))
    UZBE = _Country('Uzbekistan', 'The Republic of Uzbekistan', 'UN member state', 'UZ', 'UZB', '860', ('.uz',))
    VANU = _Country('Vanuatu', 'The Republic of Vanuatu', 'UN member state', 'VU', 'VUT', '548', ('.vu',))
    VATI = _Country('Vatican City', 'The Holy See', 'UN observer state', 'VA', 'VAT', '336', ('.va',))
    VENE = _Country('Venezuela (Bolivarian Republic of)', 'The Bolivarian Republic of Venezuela', 'UN member state',
                    'VE', 'VEN', '862', ('.ve',))
    VIET = _Country('Viet Nam', 'The Socialist Republic of Viet Nam', 'UN member state', 'VN', 'VNM', '704', ('.vn',))
    VIR1 = _Country('Virgin Islands (British)', 'The Virgin Islands', 'United Kingdom', 'VG', 'VGB', '092', ('.vg',))
    VIR2 = _Country('Virgin Islands (U.S.)', 'The Virgin Islands of the United States', 'United States', 'VI', 'VIR',
                    '850', ('.vi',))
    WALE = _Country('Wales', 'The United Kingdom of Great Britain and Northern Ireland', 'UN member state', 'GB', 'GBR',
                    '826', ('.gb', '.uk'))
    WALL = _Country('Wallis and Futuna', 'The Territory of the Wallis and Futuna Islands', 'France', 'WF', 'WLF', '876',
                    ('.wf',))
    WEST = _Country('Western Sahara', 'The Sahrawi Arab Democratic Republic', 'Disputed', 'EH', 'ESH', '732', ())
    YEME = _Country('Yemen', 'The Republic of Yemen', 'UN member state', 'YE', 'YEM', '887', ('.ye',))
    ZAMB = _Country('Zambia', 'The Republic of Zambia', 'UN member state', 'ZM', 'ZMB', '894', ('.zm',))
    ZIMB = _Country('Zimbabwe', 'The Republic of Zimbabwe', 'UN member state', 'ZW', 'ZWE', '716', ('.zw',))


class _BCP47(type):
    def __getattr__(self, name: str) -> _Locale:
        language_country = name.split('_')
        with contextlib.suppress(KeyError):
            setattr(self, name,
                    _Locale(Language[language_country[0]], Country[language_country[1]], name.replace('_', '-')))
        return super().__getattribute__(name)

    def __contains__(self, name):
        try:
            self[name]
        except KeyError:
            return False
        else:
            return True

    def __getitem__(self, name):
        try:
            return getattr(self, name.replace('-', '_'))
        except AttributeError:
            raise KeyError from None


class Locale(metaclass=_BCP47):
    af_ZA = _Locale(Language.AF, Country.SOU1, 'af-ZA')
    am_ET = _Locale(Language.AM, Country.ETHI, 'am-ET')
    ar_AE = _Locale(Language.AR, Country.UNI1, 'ar-AE')
    ar_BH = _Locale(Language.AR, Country.BAHR, 'ar-BH')
    ar_DZ = _Locale(Language.AR, Country.ALGE, 'ar-DZ')
    ar_EG = _Locale(Language.AR, Country.EGYP, 'ar-EG')
    ar_IQ = _Locale(Language.AR, Country.IRAQ, 'ar-IQ')
    ar_JO = _Locale(Language.AR, Country.JORD, 'ar-JO')
    ar_KW = _Locale(Language.AR, Country.KUWA, 'ar-KW')
    ar_LB = _Locale(Language.AR, Country.LEBA, 'ar-LB')
    ar_LY = _Locale(Language.AR, Country.LIBY, 'ar-LY')
    ar_MA = _Locale(Language.AR, Country.MORO, 'ar-MA')
    ar_MO = _Locale(Language.AR, Country.MACA, 'ar-MO')
    ar_OM = _Locale(Language.AR, Country.OMAN, 'ar-OM')
    ar_QA = _Locale(Language.AR, Country.QATA, 'ar-QA')
    ar_SA = _Locale(Language.AR, Country.SAUD, 'ar-SA')
    ar_SY = _Locale(Language.AR, Country.SYRI, 'ar-SY')
    ar_TN = _Locale(Language.AR, Country.TUNI, 'ar-TN')
    ar_YE = _Locale(Language.AR, Country.YEME, 'ar-YE')
    as_IN = _Locale(Language.AS, Country.INDI, 'as-IN')
    be_BY = _Locale(Language.BE, Country.BELA, 'be-BY')
    bg_BG = _Locale(Language.BG, Country.BULG, 'bg-BG')
    bn_BD = _Locale(Language.BN, Country.BANG, 'bn-BD')
    bn_IN = _Locale(Language.BN, Country.INDI, 'bn-IN')
    bo_BT = _Locale(Language.BO, Country.BHUT, 'bo-BT')
    bo_CN = _Locale(Language.BO, Country.PEOP, 'bo-CN')
    ca_ES = _Locale(Language.CA, Country.SPAI, 'ca-ES')
    cs_CZ = _Locale(Language.CS, Country.CZEC, 'cs-CZ')
    cy_GB = _Locale(Language.CY, Country.WALE, 'cy-GB')
    da_DK = _Locale(Language.DA, Country.DENM, 'da-DK')
    de_AT = _Locale(Language.DE, Country.AUS2, 'de-AT')
    de_CH = _Locale(Language.DE, Country.SWIT, 'de-CH')
    de_DE = _Locale(Language.DE, Country.GERM, 'de-DE')
    de_LI = _Locale(Language.DE, Country.LIEC, 'de-LI')
    de_LU = _Locale(Language.DE, Country.LUXE, 'de-LU')
    dv_MV = _Locale(Language.DV, Country.MAL3, 'dv-MV')
    el_GR = _Locale(Language.EL, Country.GRE2, 'el-GR')
    en_AU = _Locale(Language.EN, Country.CORA, 'en-AU')
    en_BZ = _Locale(Language.EN, Country.BELI, 'en-BZ')
    en_CA = _Locale(Language.EN, Country.CANA, 'en-CA')
    en_GB = _Locale(Language.EN, Country.WALE, 'en-GB')
    en_HK = _Locale(Language.EN, Country.HONG, 'en-HK')
    en_ID = _Locale(Language.EN, Country.INDO, 'en-ID')
    en_IE = _Locale(Language.EN, Country.IREL, 'en-IE')
    en_IN = _Locale(Language.EN, Country.INDI, 'en-IN')
    en_JM = _Locale(Language.EN, Country.JAMA, 'en-JM')
    en_MY = _Locale(Language.EN, Country.MAL2, 'en-MY')
    en_NZ = _Locale(Language.EN, Country.NEWZ, 'en-NZ')
    en_PH = _Locale(Language.EN, Country.PHIL, 'en-PH')
    en_SG = _Locale(Language.EN, Country.SIN1, 'en-SG')
    en_TT = _Locale(Language.EN, Country.TRIN, 'en-TT')
    en_US = _Locale(Language.EN, Country.UNI4, 'en-US')
    en_ZA = _Locale(Language.EN, Country.SOU1, 'en-ZA')
    en_ZW = _Locale(Language.EN, Country.ZIMB, 'en-ZW')
    es_AR = _Locale(Language.ES, Country.ARGE, 'es-AR')
    es_BO = _Locale(Language.ES, Country.BOLI, 'es-BO')
    es_CL = _Locale(Language.ES, Country.CHI1, 'es-CL')
    es_CO = _Locale(Language.ES, Country.COLO, 'es-CO')
    es_CR = _Locale(Language.ES, Country.COST, 'es-CR')
    es_DO = _Locale(Language.ES, Country.DOM2, 'es-DO')
    es_EC = _Locale(Language.ES, Country.ECUA, 'es-EC')
    es_ES = _Locale(Language.ES, Country.SPAI, 'es-ES')
    es_GT = _Locale(Language.ES, Country.GUAT, 'es-GT')
    es_HN = _Locale(Language.ES, Country.HOND, 'es-HN')
    es_MX = _Locale(Language.ES, Country.MEXI, 'es-MX')
    es_NI = _Locale(Language.ES, Country.NICA, 'es-NI')
    es_PA = _Locale(Language.ES, Country.PANA, 'es-PA')
    es_PE = _Locale(Language.ES, Country.PERU, 'es-PE')
    es_PR = _Locale(Language.ES, Country.PUER, 'es-PR')
    es_PY = _Locale(Language.ES, Country.PARA, 'es-PY')
    es_SV = _Locale(Language.ES, Country.ELSA, 'es-SV')
    es_US = _Locale(Language.ES, Country.UNI4, 'es-US')
    es_UY = _Locale(Language.ES, Country.URUG, 'es-UY')
    es_VE = _Locale(Language.ES, Country.VENE, 'es-VE')
    et_EE = _Locale(Language.ET, Country.ESTO, 'et-EE')
    eu_ES = _Locale(Language.EU, Country.SPAI, 'eu-ES')
    fa_IR = _Locale(Language.FA, Country.IRAN, 'fa-IR')
    fi_FI = _Locale(Language.FI, Country.FINL, 'fi-FI')
    fo_FO = _Locale(Language.FO, Country.FARO, 'fo-FO')
    fr_BE = _Locale(Language.FR, Country.BELG, 'fr-BE')
    fr_CA = _Locale(Language.FR, Country.CANA, 'fr-CA')
    fr_CG = _Locale(Language.FR, Country.REP3, 'fr-CG')
    fr_CH = _Locale(Language.FR, Country.SWIT, 'fr-CH')
    fr_CI = _Locale(Language.FR, Country.IVOR, 'fr-CI')
    fr_CM = _Locale(Language.FR, Country.CAME, 'fr-CM')
    fr_FR = _Locale(Language.FR, Country.FRAN, 'fr-FR')
    fr_HT = _Locale(Language.FR, Country.HAIT, 'fr-HT')
    fr_LU = _Locale(Language.FR, Country.LUXE, 'fr-LU')
    fr_MA = _Locale(Language.FR, Country.MORO, 'fr-MA')
    fr_MC = _Locale(Language.FR, Country.MON1, 'fr-MC')
    fr_ML = _Locale(Language.FR, Country.MAL4, 'fr-ML')
    fr_RE = _Locale(Language.FR, Country.REUN, 'fr-RE')
    fr_SN = _Locale(Language.FR, Country.SENE, 'fr-SN')
    fy_NL = _Locale(Language.FY, Country.NETH, 'fy-NL')
    ga_IE = _Locale(Language.GA, Country.IREL, 'ga-IE')
    gd_GB = _Locale(Language.GD, Country.WALE, 'gd-GB')
    gl_ES = _Locale(Language.GL, Country.SPAI, 'gl-ES')
    gn_PY = _Locale(Language.GN, Country.PARA, 'gn-PY')
    gu_IN = _Locale(Language.GU, Country.INDI, 'gu-IN')
    he_IL = _Locale(Language.HE, Country.ISRA, 'he-IL')
    hi_IN = _Locale(Language.HI, Country.INDI, 'hi-IN')
    hr_BA = _Locale(Language.HR, Country.BOSN, 'hr-BA')
    hr_HR = _Locale(Language.HR, Country.CROA, 'hr-HR')
    hu_HU = _Locale(Language.HU, Country.HUNG, 'hu-HU')
    hy_AM = _Locale(Language.HY, Country.ARME, 'hy-AM')
    id_ID = _Locale(Language.ID, Country.INDO, 'id-ID')
    ig_NG = _Locale(Language.IG, Country.NIG2, 'ig-NG')
    ii_CN = _Locale(Language.II, Country.PEOP, 'ii-CN')
    is_IS = _Locale(Language.IS, Country.ICEL, 'is-IS')
    it_CH = _Locale(Language.IT, Country.SWIT, 'it-CH')
    it_IT = _Locale(Language.IT, Country.ITAL, 'it-IT')
    ja_JP = _Locale(Language.JA, Country.JAPA, 'ja-JP')
    ka_GE = _Locale(Language.KA, Country.GEOR, 'ka-GE')
    kk_KZ = _Locale(Language.KK, Country.KAZA, 'kk-KZ')
    km_KH = _Locale(Language.KM, Country.CAMB, 'km-KH')
    kn_IN = _Locale(Language.KN, Country.INDI, 'kn-IN')
    ko_KR = _Locale(Language.KO, Country.SOU3, 'ko-KR')
    kr_NG = _Locale(Language.KR, Country.NIG2, 'kr-NG')
    ky_KG = _Locale(Language.KY, Country.KYRG, 'ky-KG')
    ky_KZ = _Locale(Language.KY, Country.KAZA, 'ky-KZ')
    lo_LA = _Locale(Language.LO, Country.LAOS, 'lo-LA')
    lt_LT = _Locale(Language.LT, Country.LITH, 'lt-LT')
    lv_LV = _Locale(Language.LV, Country.LATV, 'lv-LV')
    mi_NZ = _Locale(Language.MI, Country.NEWZ, 'mi-NZ')
    mk_MK = _Locale(Language.MK, Country.MACE, 'mk-MK')
    ml_IN = _Locale(Language.ML, Country.INDI, 'ml-IN')
    mn_MN = _Locale(Language.MN, Country.MON2, 'mn-MN')
    mr_IN = _Locale(Language.MR, Country.INDI, 'mr-IN')
    ms_BN = _Locale(Language.MS, Country.BRUN, 'ms-BN')
    ms_MY = _Locale(Language.MS, Country.MAL2, 'ms-MY')
    mt_MT = _Locale(Language.MT, Country.MAL5, 'mt-MT')
    my_MM = _Locale(Language.MY, Country.MYAN, 'my-MM')
    nb_NO = _Locale(Language.NB, Country.NOR5, 'nb-NO')
    ne_IN = _Locale(Language.NE, Country.INDI, 'ne-IN')
    ne_NP = _Locale(Language.NE, Country.NEPA, 'ne-NP')
    nl_BE = _Locale(Language.NL, Country.BELG, 'nl-BE')
    nl_NL = _Locale(Language.NL, Country.NETH, 'nl-NL')
    nn_NO = _Locale(Language.NN, Country.NOR5, 'nn-NO')
    or_IN = _Locale(Language.OR, Country.INDI, 'or-IN')
    pa_IN = _Locale(Language.PA, Country.INDI, 'pa-IN')
    pa_PK = _Locale(Language.PA, Country.PAKI, 'pa-PK')
    pl_PL = _Locale(Language.PL, Country.POLA, 'pl-PL')
    ps_AF = _Locale(Language.PS, Country.AFGH, 'ps-AF')
    pt_BR = _Locale(Language.PT, Country.BRAZ, 'pt-BR')
    pt_PT = _Locale(Language.PT, Country.PORT, 'pt-PT')
    rm_CH = _Locale(Language.RM, Country.SWIT, 'rm-CH')
    ro_MD = _Locale(Language.RO, Country.MOLD, 'ro-MD')
    ro_RO = _Locale(Language.RO, Country.ROMA, 'ro-RO')
    ru_MD = _Locale(Language.RU, Country.MOLD, 'ru-MD')
    ru_RU = _Locale(Language.RU, Country.RUSS, 'ru-RU')
    sa_IN = _Locale(Language.SA, Country.INDI, 'sa-IN')
    sd_IN = _Locale(Language.SD, Country.INDI, 'sd-IN')
    sd_PK = _Locale(Language.SD, Country.PAKI, 'sd-PK')
    se_NO = _Locale(Language.SE, Country.NOR5, 'se-NO')
    si_LK = _Locale(Language.SI, Country.SRIL, 'si-LK')
    sk_SK = _Locale(Language.SK, Country.SLO1, 'sk-SK')
    sl_SI = _Locale(Language.SL, Country.SLO2, 'sl-SI')
    so_SO = _Locale(Language.SO, Country.SOMA, 'so-SO')
    sq_AL = _Locale(Language.SQ, Country.ALBA, 'sq-AL')
    st_ZA = _Locale(Language.ST, Country.SOU1, 'st-ZA')
    sv_FI = _Locale(Language.SV, Country.FINL, 'sv-FI')
    sv_SE = _Locale(Language.SV, Country.SWED, 'sv-SE')
    sw_KE = _Locale(Language.SW, Country.KENY, 'sw-KE')
    ta_IN = _Locale(Language.TA, Country.INDI, 'ta-IN')
    te_IN = _Locale(Language.TE, Country.INDI, 'te-IN')
    th_TH = _Locale(Language.TH, Country.THAI, 'th-TH')
    ti_ER = _Locale(Language.TI, Country.ERIT, 'ti-ER')
    ti_ET = _Locale(Language.TI, Country.ETHI, 'ti-ET')
    tk_TM = _Locale(Language.TK, Country.TUR2, 'tk-TM')
    tn_ZA = _Locale(Language.TN, Country.SOU1, 'tn-ZA')
    tr_TR = _Locale(Language.TR, Country.TUR1, 'tr-TR')
    ts_ZA = _Locale(Language.TS, Country.SOU1, 'ts-ZA')
    tt_RU = _Locale(Language.TT, Country.RUSS, 'tt-RU')
    uk_UA = _Locale(Language.UK, Country.UKRA, 'uk-UA')
    ur_IN = _Locale(Language.UR, Country.INDI, 'ur-IN')
    ur_PK = _Locale(Language.UR, Country.PAKI, 'ur-PK')
    vi_VN = _Locale(Language.VI, Country.VIET, 'vi-VN')
    xh_ZA = _Locale(Language.XH, Country.SOU1, 'xh-ZA')
    yo_NG = _Locale(Language.YO, Country.NIG2, 'yo-NG')
    zh_CN = _Locale(Language.ZH, Country.PEOP, 'zh-CN')
    zh_HK = _Locale(Language.ZH, Country.HONG, 'zh-HK')
    zh_MO = _Locale(Language.ZH, Country.MACA, 'zh-MO')
    zh_SG = _Locale(Language.ZH, Country.SIN1, 'zh-SG')
    zh_TW = _Locale(Language.ZH, Country.TAIW, 'zh-TW')
    zu_ZA = _Locale(Language.ZU, Country.SOU1, 'zu-ZA')
